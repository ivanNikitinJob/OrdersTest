// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OrderTest.Repositories.Context;

namespace OrderTest.Repositories.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20200228120732_init2")]
    partial class init2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OrderTest.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7bdc1704-c4df-4490-afa2-2fa6af2512dc"),
                            CreationDate = new DateTime(2020, 2, 28, 12, 7, 31, 399, DateTimeKind.Utc).AddTicks(836),
                            Name = "Order 1",
                            Status = 0
                        });
                });

            modelBuilder.Entity("OrderTest.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2b15b990-67ad-497d-acd5-0fbccb6949d0"),
                            Name = "Prod 1",
                            OrderId = new Guid("7bdc1704-c4df-4490-afa2-2fa6af2512dc"),
                            Price = 10m,
                            Quantity = 5
                        },
                        new
                        {
                            Id = new Guid("da3bf0f1-029c-4331-821d-b2505b272d76"),
                            Name = "Prod 2",
                            OrderId = new Guid("7bdc1704-c4df-4490-afa2-2fa6af2512dc"),
                            Price = 1m,
                            Quantity = 15
                        },
                        new
                        {
                            Id = new Guid("2cbd82ad-2d40-470f-9d9f-7e61345eaa31"),
                            Name = "Prod 3",
                            OrderId = new Guid("7bdc1704-c4df-4490-afa2-2fa6af2512dc"),
                            Price = 65m,
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("OrderTest.Entities.Product", b =>
                {
                    b.HasOne("OrderTest.Entities.Order", "Order")
                        .WithMany("ProductsList")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
